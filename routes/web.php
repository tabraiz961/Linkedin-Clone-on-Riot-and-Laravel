<?php

/*
|--------------------------------------------------------------------------
| Web Routes
|--------------------------------------------------------------------------
|
| Here is where you can register web routes for your application. These
| routes are loaded by the RouteServiceProvider within a group which
| contains the "web" middleware group. Now create something great!
|
*/

/*
 * GENERAL
 */

use App\Http\Controllers\PostController;
use App\Http\Controllers\SearchController;
use App\Http\Controllers\UserController;
use App\Notification;
use App\Notifications\FriendRequestReceived;
use App\Utils;
use Illuminate\Foundation\Auth\User;
use Illuminate\Support\Facades\Storage;

Route::get('/', 'IndexController@get')->name('index');

Route::get('/test', function () {
	$req = new Illuminate\Http\Request();
	$req->input = 'ariz';
	 echo('<pre>');print_r(SearchController::mainHeaderSearch($req) );echo('</pre>');;
});


/*
 * USERS
 */
Route::middleware(['auth'])->group( function() {
	Route::get('user/', 'UserController@list')->name( 'user.list' );
});

Route::middleware(['auth', 'api'])->group( function() {
	Route::get('api/{username}/images/{last_id?}', 'UserController@imagesUser')->name( 'api.user.images' );
	Route::get('api/{username}/videos/{last_id?}', 'UserController@videosUser')->name( 'api.user.videos' );
	Route::get('api/{username}/events/{last_id?}', 'UserController@eventsUser')->name( 'api.user.events' );

	Route::post('api/{username}/education', 'UserController@education');
	Route::post('api/{username}/experience', 'UserController@experience');
	Route::post('api/{username}/skill', 'UserController@skill');

	Route::get('api/images/{last_id?}', 'UserController@images');
	Route::get('api/videos/{last_id?}', 'UserController@videos');
	Route::get('api/events/{last_id?}', 'UserController@events');

	
});

/*
 * NETWORK & FRIENDS
 */
Route::middleware(['auth'])->group( function() {
    Route::get('network', 'UserController@network')->name( 'user.network.list' );

	Route::get('api/friend/toggle/request/{userId?}', 'FriendController@toggleRequest')->name( 'api.friend.toggle.request' );
    Route::put('network/{username}', 'NetworkMembersController@add')->name( 'user.network.add' );
    Route::put('friend/{username}', 'FriendController@add')->name( 'user.friend.add' );
    Route::put('friend/{username}/ask', 'FriendController@ask')->name( 'user.friend.ask' );

    Route::delete('network/{username}', 'NetworkMembersController@remove')->name( 'user.network.remove' );
    Route::delete('friend/{username}', 'FriendController@remove')->name( 'user.friend.remove' );
	Route::delete('friend/{username}/ask/refuse', 'FriendController@refuse')->name( 'user.friend.ask.refuse' );
	Route::delete('friend/{username}/ask', 'FriendController@removeRequest')->name( 'user.friend.ask.delete' );
	
	Route::get('friend/{username}/status', 'NetworkMembersController@userInFriendOrRequests')->name( 'user.friend.status' );
});

/*
 *  INSTITUTIONS
 */
Route::middleware(['auth'])->group( function() {	// Institution  creation from user profile
	Route::get('institution/job/create/{id?}', 'JobController@create')->name( 'institution.job.create' );
	Route::delete('institution/job/delete/{id?}', 'JobController@delete')->name( 'institution.job.delete' );
	
	Route::post('institution/create', 'InstitutionController@createStepOne')->name( 'institutions.create1' );
	Route::get('institution/{slug}', 'InstitutionController@loadInstitution')->name( 'institutions.load' );
	Route::get('institution/{slug}/create', 'InstitutionController@createStepTwo')->name( 'institutions.create2' );
	Route::post('institution/{slug}/update', 'InstitutionController@update')->name( 'institutions.update' );

	// Jobs  
	Route::put('job/{id?}', 'JobController@store')->name( 'job.store' ); //Need a more specific url
});
// APi group with api url
Route::get('course/blocks/{courseId}', 'CoursesController@getCoursesBlocks')->name('course.blocks.public');

Route::middleware(['auth', 'api'])->group( function() {
	

	Route::get('courses/mycourses', 'CoursesController@myCourses')->name('courses.mycourse.list');

	// Courses Create/Edit/
	Route::get('course/block/delete/{blockId?}', 'CoursesController@blockDelete')->name('course.block.delete');
	Route::get('course/block/autogen', 'CoursesController@getAutoGeneratedBlockId')->name('course.block.autogen');

	Route::post('course/file/delete', 'CoursesController@removeFileFromBlock')->name('course.file.delete');
	Route::post('course/files/final', 'CoursesController@fileConfirm')->name( 'course.files.final' );
	Route::post('course/files/asnyc', 'CoursesController@fileUpload')->name( 'course.files.async' );
	Route::delete('course/files/asnyc/{id}', 'CoursesController@fileDelete')->name( 'course.files.async.delete' );
	
	Route::get('course/create/{id}', 'CoursesController@create')->name( 'course.create' );
	Route::post('course/create/{id}', 'CoursesController@create')->name( 'course.submit' );
	Route::post('/api/course/submit_rating', 'CoursesController@addRatings')->name( 'api.course.submit_rating' );
	
	
	
	// Get Network Users 
	Route::get('api/network/users', 'NetworkMembersController@networkUsers')->name( 'api.user.network.users' );
	
	Route::get('api/institutions/{name?}', 'InstitutionController@get')->name( 'api.institutions' );
	Route::get('api/network/institutions', 'NetworkMembersController@instutionsNetwork')->name( 'api.networks.institutions');
	Route::put('api/network/institutions/ask/{instituteSlug}', 'NetworkMembersController@institutionsAsk')->name( 'api.networks.institutions.ask' );
	Route::get('api/network/institutions/toggle/{instituteId?}', 'NetworkMembersController@institutionsFollowToggle')->name( 'api.networks.institutions.toggle' );
	
	Route::get('api/networks/users/experience', 'UserController@experienceNetwork')->name( 'api.network.users.experience' );
	Route::get('api/network', 'NetworkMembersController@get')->name( 'api.user.network.list' );
	
    Route::get('api/friend', 'FriendController@get')->name( 'api.user.friend.list' );
	Route::get('api/timeline/{last_id?}', 'UserController@timeline')->name( 'api.user.timeline' );
	// Route::get('api/relatedprofile/{last_id?}', 'UserController@relatedprofile')->name( 'api.user.relatedprofile' );
	Route::get('api/newprofiles/{last_id?}', 'UserController@newprofiles')->name( 'api.user.newprofiles' );
	
});

Route::get('api/course/interested/{courseId?}', 'CoursesController@interestedToggle')->name( 'api.course.interest.toggle' );
Route::get('courses', 'CoursesController@public')->name( 'courses.all.public' );
Route::get('api/courses', 'CoursesController@getAllCourses')->name( 'courses.all.get' );
Route::get('course/information/{slug}', 'CoursesController@getCourseBySlug')->name( 'courses.course.get' );
Route::get('course/{slug}', 'CoursesController@getCourseView')->name( 'courses.course.view' );
Route::get('api/job/{institute?}', 'JobController@jobs')->name( 'api.jobs' );

/*
 * POSTS
 */
Route::middleware(['auth'])->group( function() {
	Route::get('post/{post_id}', 'PostController@show')->name( 'post.get' );
});

Route::middleware(['auth', 'api'])->group( function() {
	Route::get('api/post/{post_id}', 'PostController@get')->name( 'api.post.get' );
	Route::get('api/post/{post_id}/access', 'PostController@access')->name( 'api.post.access' );
	Route::post( 'api/post/subs', 'PostController@subposts' )->name( 'api.post.subs' );
	Route::post( 'api/post/gets', 'PostController@gets' )->name( 'api.post.gets' );

	Route::post('api/post', 'PostController@create')->name( 'api.post.create' );
	Route::put('api/image', 'PostController@createImage')->name( 'api.image.create' );
	Route::put('api/video', 'PostController@createVideo')->name( 'api.video.create' );

	Route::put('api/{username}/image', 'PostController@createImageUser')->name( 'api.user.image.create' );
	Route::put('api/{username}/video', 'PostController@createVideoUser')->name( 'api.user.video.create' );

	Route::get('api/post/{post_id}/comments', 'CommentController@get');
	Route::put('api/post/{post_id}/comments', 'CommentController@post');

	Route::get('api/tags/trending', 'PostController@trendingTags')->name('api.tags.trending.list');
});

/*
 * REACTIONS
 */
Route::middleware(['auth', 'api'])->group( function() {
	Route::get('api/post/{post_id}/reaction', 'ReactionController@forPost')->name( 'api.post.reaction.get' );
	Route::get('api/comment/{comment_id}/reaction', 'ReactionController@forComment')->name( 'api.comment.reaction.get' );

	Route::post('api/post/gets/reaction', 'ReactionController@forPosts')->name( 'api.post.gets.reaction' );
	Route::post('api/comment/gets/reaction', 'ReactionController@forComments')->name( 'api.comment.gets.reaction' );

	Route::put('api/post/{post_id}/reaction', 'ReactionController@addForPost')->name( 'api.post.reaction.add' );
	Route::put('api/comment/{comment_id}/reaction', 'ReactionController@addForComment')->name( 'api.comment.reaction.add' );

	Route::delete('api/post/{post_id}/reaction', 'ReactionController@removeForPost')->name( 'api.post.reaction.remove' );
	Route::delete('api/comment/{comment_id}/reaction', 'ReactionController@removeForComment')->name( 'api.comment.reaction.remove' );
});

Route::middleware(['auth', 'api'])->group( function() {
	Route::post('api/notification/{notification_id}/read', 'NotificationController@read')->name( 'api.notification.read.mark' );

});

/*
 * JOBS
 */
Route::get('job/applications/users', 'JobController@userApplications')->name( 'job.applications.page' );
Route::get('api/job/applications/users/{job_id?}', 'JobController@apiGetUserApplicationByJob')->name( 'job.applications.users' );
Route::get('job/list/{institute?}', 'JobController@list')->name( 'job.list' );
Route::middleware( 'auth' )->group( function() {
	// Route::get('job/own', 'JobController@listOwn')->name( 'job.list.own' );
	// Route::get('job/create', 'JobController@create')->name( 'job.create' );
	// Route::get('job/{id}/edit', 'JobController@edit')->name( 'job.edit' );
	// Route::get('job/{id}/delete', 'JobController@deleteAsk')->name( 'job.delete.ask' );

	// Route::get('job/{id}', 'JobController@show')->name( 'job.show' );

	Route::post('job/{id}/apply', 'JobController@apply')->name( 'job.apply' );
	// Route::post('job/{id}', 'JobController@update')->name( 'job.update' );

	// Route::put('job', 'JobController@store')->name( 'job.store' );

	// Route::delete('job/{id}', 'JobController@delete')->name( 'job.delete' );
});

/*
 * ENTITIES
 */
Route::middleware( 'auth' )->group( function() {
	Route::get('entity', 'EntityController@list')->name( 'entity.list' );
	Route::get('entity/own', 'EntityController@listOwn')->name( 'entity.list.own' );
	Route::get('entity/create', 'EntityController@create')->name( 'entity.create' );
	Route::get('entity/{id}/edit', 'EntityController@edit')->name( 'entity.edit' );
	Route::get('entity/{id}/delete', 'EntityController@deleteAsk')->name( 'entity.delete.ask' );

	Route::get('entity/{id}', 'EntityController@show')->name( 'entity.show' );

	Route::post('entity/{id}', 'EntityController@update')->name( 'entity.update' );


	Route::put('entity', 'EntityController@store')->name( 'entity.store' );

	Route::delete('entity/{id}', 'EntityController@delete')->name( 'entity.delete' );
});

Route::middleware(['auth', 'api'])->group( function() {
	Route::get('api/entity', 'EntityController@getAll')->name( 'api.entity' );
});

/*
 * SEARCH
 */
Route::get('search/address', 'SearchController@getAddress')->name( 'search.getAddress' );
Route::middleware('auth')->group( function() {
	Route::get('search/user/history', 'SearchController@searchHistory')->name('search.user.history');
	Route::get('search/languages', 'SearchController@getLanguages')->name( 'search.getLanguages' );
	Route::get('search/skills', 'SearchController@getSkills')->name( 'search.getSkills' );
	Route::get('search/user/all', 'SearchController@users')->name( 'search.user' );
	Route::get('search/jobs', 'SearchController@jobs')->name( 'search.job' );
	Route::post('api/search/header', 'SearchController@mainHeaderSearch')->name('api.search.header');
	
});

/*
 * AUTH
 */
Auth::routes();

/*
 * USER PROFILE
 *
 * (last one because it handles every other possible URLs)
 */
Route::post('profile/{username}/skills', 'UserController@skillUpdate')->name( 'user.profile.skill.update' );
Route::get('profile/{username}/appreciate/{skillId?}', 'UserController@appreciated')->name( 'user.profile.skill.appreciate' );
Route::get('profile/{username}', 'UserController@profile')->name( 'user.profile' );

Route::middleware(['auth'])->group( function() {
	Route::post('user/{id}', 'UserController@update')->name( 'user.update' );
	
	// Profile Experience URLS
	Route::post('user/experience/job/add', 'UserController@experience')->name( 'user.experience.job.add' );
	Route::post('user/experience/job/remove/{experienceId}', 'UserController@removeExperience')->name( 'user.experience.job.remove' );
	Route::post('user/experience/institute/remove/{instituteId}', 'UserController@removeInstitute')->name( 'user.experience.institute.remove' );
	
	Route::delete('{username}', 'UserController@delete')->name( 'user.delete' );
});